{"version":3,"sources":["components/firebase.js","components/Burger.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","Burger","useState","burger","setburger","burgerList","setburgerList","idOfUpdate","setIdOfUpdate","truth","setTruth","useEffect","populate","markCompleteGlobal","id","firestore","collection","doc","update","isCompleted","data","get","then","querySnapshot","forEach","newData","indexOf","arr","console","log","catch","e","className","type","onChange","target","value","handleChange","placeholder","onClick","datas","burgerDetails","set","map","item","preventDefault","delete","error","res","filter","todo","deleteBurger","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAYAA,IAASC,cATY,CACnBC,OAAQ,0CACRC,WAAY,mCACZC,UAAW,mBACXC,cAAe,+BACfC,kBAAmB,eACnBC,MAAO,8CAKMP,QAAf,E,eC8IeQ,MAvJf,WAAmB,IAAD,EACcC,mBAAS,IADvB,mBACPC,EADO,KACCC,EADD,OAEsBF,mBAAS,IAF/B,mBAEPG,EAFO,KAEKC,EAFL,OAGuBJ,mBAAS,MAHhC,mBAGNK,EAHM,KAGMC,EAHN,OAIYN,qBAJZ,mBAIPO,EAJO,KAIAC,EAJA,KAMbC,qBAAU,WACTC,MACC,IAEHD,qBAAU,WAEG,OADFJ,GAEPM,MAED,CAACJ,IAEJ,IAAMI,EAAqB,WACvB,IAAIC,EAAKP,EACUd,EAClBsB,YACAC,WAAW,UACXC,IAAIH,GAEMI,OAAO,CAClBC,YAAaV,IAGfD,EAAc,MACdE,EAAS,OAiCHE,EAAW,SAACQ,GAGlB,OADDd,EAAc,IACNb,EACJsB,YACAC,WAAW,UACXK,MACAC,MAAK,SAASC,GACbA,EAAcC,SAAQ,SAASP,GAC7B,IAAIQ,EAAUR,EAAIG,QAEsB,IAApCf,EAAWqB,QAAQD,EAAQX,IAC7BR,GAAc,SAACqB,GACb,MAAM,GAAN,mBAAWA,GAAX,CAAgBF,OAGlBG,QAAQC,IAAI,uBAEdD,QAAQC,IAAI,4BAA6BxB,SAG5CyB,OAAM,SAACC,GAAD,OAAOH,QAAQC,IAAIE,OAuC9B,OAEI,sBAAKC,UAAU,SAAf,UACA,8CACA,uBACA,oBAAIA,UAAW,aAAf,0BACI,uBAAOC,KAAK,OAAOnB,GAAG,aAAaoB,SAAW,SAACH,IAhGlC,SAACA,GACpB3B,EAAU2B,EAAEI,OAAOC,OA+FwCC,CAAaN,IAAKO,YAAY,kBACnF,uBACA,wBAAQL,KAAK,SAASD,UAAU,UAAUO,QA9FhC,WAChB,GAAe,KAAXpC,EAAe,CACf,IAAMqC,EAAQ,CAChB1B,GAAIrB,EACDsB,YACAC,WAAW,UACXC,MAAMH,IAGJ2B,EAAgB,CACnB3B,GAAI0B,EAAM1B,GACVsB,MAAOjC,EACPgB,aAAa,GAGN1B,EAASsB,YACjBC,WAAW,UACXC,IAAIuB,EAAM1B,IACV4B,IAAI,CAAEN,MAAOjC,EAAQgB,aAAa,EAAOL,GAAI0B,EAAM1B,KAAMQ,MAAK,WAC5DhB,EAAc,GAAD,mBAAKD,GAAL,CAAiBoC,KAC9Bb,QAAQC,IAAI,qBACbjB,SAyEE,4BACA,uBACA,oBAAIoB,UAAU,YAAd,0BACA,uBAEH3B,IAAe,GACZ,6BACMA,EAAWsC,KAAI,SAACC,GAAD,OAChB,qBAAIZ,UAAU,WAAd,UAA0BY,EAAKR,MAC9B,wBAAQH,KAAK,SAASD,UAAU,aAAaO,QAAS,SAACR,GAAD,OArD/C,SAACA,EAAGjB,GACvBiB,EAAEc,iBACSpD,EAASsB,YACjBC,WAAW,UACXC,IAAIH,GACJgC,SACAxB,MAAK,WACJM,QAAQC,IAAI,iCAAkCf,MAE/CgB,OAAM,SAACiB,GACNnB,QAAQmB,MAAMjC,EAAI,4BAA6BiC,MAEhDzB,MAAK,SAAC0B,GAAD,OAAS1C,EAAc,YAAID,EAAW4C,QAAO,SAACC,GAAD,OAAUA,EAAKpC,KAAOA,UAC3Ec,QAAQC,IAAIf,EAAI,gBAAiBA,GAwCuCqC,CAAapB,EAAGa,EAAK9B,KAAjF,oCAKP,SCrIIsC,MATf,WACE,OACE,sBAAKpB,UAAU,MAAf,UACE,sBAAMA,UAAU,QAAhB,wBADF,IAC4C,uBAC1C,cAAC,EAAD,QCLNqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9ca276a3.chunk.js","sourcesContent":["import firebase from 'firebase';\r\nimport '@firebase/firestore';\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyDfbRKo6-WB6Oih8JVpbO-g0xn0k_iUcfw\",\r\n  authDomain: \"burger-app-d29f0.firebaseapp.com\",\r\n  projectId: \"burger-app-d29f0\",\r\n  storageBucket: \"burger-app-d29f0.appspot.com\",\r\n  messagingSenderId: \"570826552007\",\r\n  appId: \"1:570826552007:web:76e4dc02070d5cbab3c4e2\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;\r\n","import React, {useState, useEffect} from 'react';\r\nimport firebase from './firebase';\r\nimport './BurgerApp.css';\r\n\r\n\r\nfunction Burger() {\r\n    const [burger, setburger] = useState(\"\");\r\n    const [burgerList, setburgerList] = useState([]);\r\n     const [idOfUpdate, setIdOfUpdate] = useState(null);\r\n    const [truth, setTruth] = useState();\r\n  \r\n     useEffect(() => {\r\n      populate();\r\n    }, []);\r\n  \r\n    useEffect(() => {\r\n      let id = idOfUpdate;\r\n      if (id !== null) {\r\n        markCompleteGlobal();\r\n      }\r\n    }, [truth]);\r\n  \r\n    const markCompleteGlobal = () => {\r\n        let id = idOfUpdate;\r\n      const itemtoupdate = firebase\r\n        .firestore()\r\n        .collection(\"burger\")\r\n        .doc(id);\r\n  \r\n      itemtoupdate.update({\r\n        isCompleted: truth,\r\n      });\r\n  \r\n      setIdOfUpdate(null);\r\n      setTruth(null);\r\n    };\r\n  \r\n    const handleChange = (e) => {\r\n      setburger(e.target.value);\r\n    };\r\n  \r\n    const AddBurger = () => {\r\n      if (burger !== \"\") {\r\n          const datas = {\r\n        id: firebase\r\n          .firestore()\r\n          .collection(\"burger\")\r\n          .doc().id,\r\n      };\r\n  \r\n       const burgerDetails = {\r\n          id: datas.id,\r\n          value: burger,\r\n          isCompleted: false,\r\n        };\r\n  \r\n      const db = firebase.firestore();\r\n      db.collection(\"burger\")\r\n        .doc(datas.id)\r\n        .set({ value: burger, isCompleted: false, id: datas.id }).then(() => {\r\n           setburgerList([...burgerList, burgerDetails]);\r\n           console.log(\"this is a new one\");\r\n          populate();\r\n        });\r\n      }\r\n    };\r\n  \r\n      const populate = (data) => {\r\n  \r\n     setburgerList([])\r\n      return firebase\r\n        .firestore()\r\n        .collection(\"burger\")\r\n        .get()\r\n        .then(function(querySnapshot) {\r\n          querySnapshot.forEach(function(doc) {\r\n            let newData = doc.data();\r\n  \r\n            if (burgerList.indexOf(newData.id) === -1) {\r\n              setburgerList((arr) => {\r\n                return [...arr, newData];\r\n              });\r\n            } else {\r\n              console.log(\"this is a duplicate\");\r\n            }\r\n            console.log(\"here are all of the todos\", burgerList);\r\n          });\r\n        })\r\n        .catch((e) => console.log(e));\r\n    };\r\n  \r\n    const deleteBurger = (e, id) => {\r\n      e.preventDefault();\r\n      const db = firebase.firestore();\r\n      db.collection(\"burger\")\r\n        .doc(id)\r\n        .delete()\r\n        .then(() => {\r\n          console.log(\"Document successfully deleted!\", id);\r\n        })\r\n        .catch((error) => {\r\n          console.error(id, \"Error removing document: \", error);\r\n        })\r\n        .then((res) => setburgerList([...burgerList.filter((todo) => todo.id !== id)]));\r\n      console.log(id, \"here is an id\", id);\r\n    };\r\n  \r\n  \r\n    const burgerCompleted = (e, id) => {\r\n      e.preventDefault();\r\n      setIdOfUpdate(id);\r\n   setburgerList(\r\n        burgerList.map((todo) => {\r\n          if (todo.id === id) {\r\n            todo.isCompleted = !todo.isCompleted;\r\n  \r\n            setTimeout(function() {\r\n              setTruth(todo.isCompleted);\r\n            }, 1000);\r\n          }\r\n          return todo;\r\n        })\r\n      )\r\n      console.log(\"Second\", idOfUpdate, truth);\r\n  \r\n    };\r\n  \r\n    return (\r\n      \r\n        <div className=\"burger\">\r\n        <h1>Tasty Burger</h1>\r\n        <hr/>\r\n        <h2 className =\"burgerMade\">Burgers Made</h2>                                       \r\n            <input type=\"text\" id=\"makeBurger\" onChange ={(e) =>{handleChange(e)}} placeholder=\"Make a Burger\"></input>\r\n            <br/>\r\n            <button type=\"button\" className=\"add-btn\" onClick = {AddBurger}>Add New Burger</button>\r\n            <hr/>\r\n            <h2 className=\"burgerEat\">Eat a Burger</h2>\r\n            <hr/>\r\n\r\n        {burgerList !== [] ? (\r\n            <ul>\r\n                 {burgerList.map((item)=>(\r\n                 <li className=\"listItem\">{item.value}\r\n                  <button type=\"button\" className=\"remove-btn\" onClick={(e)=> deleteBurger(e, item.id)}>\r\n                      Eat the Burger\r\n                  </button>\r\n                  </li>))}\r\n        </ul>\r\n        ): null}\r\n       \r\n    </div>\r\n   \r\n    );\r\n  }\r\n \r\nexport default Burger;","import React from \"react\";\nimport Burger from './components/Burger';\nimport firebase from './components/firebase';\nimport \"./index\";\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <span className=\"title\">Burger App</span> <br />\n      <Burger />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}